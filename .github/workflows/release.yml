name: Build and Release

on:
  push:
    tags:
      - 'v*.*.*'

jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ macos-latest, ubuntu-latest, windows-latest ]

    steps:
      - name: Check out Git repository
        uses: actions/checkout@v4

      - name: Install Node.js, NPM and Yarn
        uses: actions/setup-node@v4
        with:
          node-version: actions/create-release@v1

      - name: Compile Electron App
        uses: Yan-Jobs/action-electron-builder@v1.7.0
        with:
          # GitHub token, automatically provided to the action
          # (Optional)
          env:
            GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}

          # If the commit is tagged with a version (e.g. "v1.0.0"),
          # (Optional)
          release: ${{ startsWith(github.ref, 'refs/tags/v') }}

          # Package manager. NPM, PNPM and Yarn supported. Install Yarn and PNPM yourself. Default is NPM
          # (Optional)
          package_manager: NPM

          # Skip buiding the application
          # (Optional)
          skip_build: false

#jobs:
#  build:
#    runs-on: ${{ matrix.os }}
#    strategy:
#      matrix:
#        os: [macos-latest, windows-latest, ubuntu-latest]
#
#    steps:
#      - name: Check out Git repository
#        uses: actions/checkout@v2
#
#      - name: Set up Node.js
#        uses: actions/setup-node@v2
#        with:
#          node-version: '20'
#
#      - name: Install dependencies
#        run: npm install
#
#      - name: Build Electron app
#        run: npm run build
#
#      - name: Create Release
#        id: create_release
#        uses: actions/create-release@v1
#        env:
#          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
#        with:
#          tag_name: ${{ github.ref }}
#          release_name: Release ${{ github.ref }}
#          draft: false
#          prerelease: false
#
#      - name: Upload Release Assets
#        uses: actions/upload-release-asset@v1
#        with:
#          upload_url: ${{ steps.create_release.outputs.upload_url }}
#          asset_path: ./dist/*.*
#          asset_name: ${{ matrix.os }}-${{ github.ref }}.zip
#          asset_content_type: application/zip