name: Build and Release

on:
  push:
    tags:
      - 'v*'

jobs:
 build:
   runs-on: ${{ matrix.os }}
   strategy:
     matrix:
       os: [macos-latest, windows-latest, ubuntu-latest]

   steps:
     - name: Check out Git repository
       uses: actions/checkout@v2

     - name: Set up Node.js
       uses: actions/setup-node@v2
       with:
         node-version: '20'

     - name: Install dependencies
       run: yarn install

     - name: Build Electron app
       run: yarn buildname: Build Electron App

       on:
         push:
           branches:
             - main
         pull_request:
           branches:
             - main
       
       jobs:
         build:
           runs-on: ubuntu-latest
       
           strategy:
             matrix:
               node-version: [18.x]
               os: [ubuntu-latest, macos-latest, windows-latest]
       
           steps:
             - name: Checkout code
               uses: actions/checkout@v3
       
             - name: Set up Node.js ${{ matrix.node-version }}
               uses: actions/setup-node@v3
               with:
                 node-version: ${{ matrix.node-version }}
                 cache: 'npm'
       
             - name: Install dependencies
               run: npm install
       
             - name: Build Electron App
               run: npm run build
       
             - name: Package Electron App
               run: |
                 npm run package
       
             - name: Archive artifacts
               uses: actions/upload-artifact@v3
               with:
                 name: electron-app-${{ runner.os }}
                 path: out/
       
         release:
           runs-on: ubuntu-latest
           needs: build
       
           steps:
             - name: Download artifacts
               uses: actions/download-artifact@v3
               with:
                 path: dist/
       
             - name: Create Release
               uses: softprops/action-gh-release@v1
               with:
                 files: dist/**
               env:
                 GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
       

     - name: Create Release
       id: create_release
       uses: actions/create-release@v1
       env:
         GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
       with:
         tag_name: ${{ github.ref }}
         release_name: Release ${{ github.ref }}
         draft: false
         prerelease: false

     - name: Upload Release Assets
       uses: actions/upload-release-asset@v1
       with:
         upload_url: ${{ steps.create_release.outputs.upload_url }}
         asset_path: ./dist/*.*
         asset_name: ${{ matrix.os }}-${{ github.ref }}.zip
         asset_content_type: application/zip